<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEBLAEsAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCADIARgDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD88qKKKyOgKKKKACiiigAooooAKKKKACiiigAooooAKKKKACii
        igAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACii
        igAor0D4L/CW5+LviK9sI7n7BZ2VlLeXN4V3CMKvyjHcs21R9a5jxZ4T1DwbrEunajFskXlHH3ZF7Mp9
        KfK7c3QnmV+XqY1FFFIoKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAo
        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
        CFQD8qqMnsK4zxv8W9M8HWVxI1xFCIgfMnlbCr+P9K/E8PQqYiShTV2fXycaa5pHdXVzBpts11fSiKFB
        nBPJrwL43ftV6P4FsngFwElYYjtYDmaT8P4R7mvln45/tZ3vjAXOmeHppo7eT5X1FiVcjPSMfwg+vXnt
        XzY8jSuXdi7E5LMckmv07K+GFBKri3d9jwsRj2/dp/ed78VfjLrfxW1BZL9/s9jExMNnGxKjPdj/ABH3
        /Kse1uhc6BY2TuRCspaVc43Lljg8+uP51zNPWaRFwrED0r7+EI04qEFZI8Ztyd2djb6xJY6C9t5zGSON
        1Rw3OOdpHPHGPpVSynhj8NmwYruuAWPzHBfqpP0wPyrmjcSEYLkikNxIcfOeK0EdNDeNeaHY2U0jeWkn
        71Sx5QE4U89Og9uPSrdvrEljoL2vnMZI43VHDc4524544x9K48XEg6OaQ3EjAguSDQB2cmunTbSxt7N/
        LjSVEbAHK98+59ahEtuniBNQjwjbGLBeMueMn6gn8RXJCeRQAHIAo+0SZJ3nJoA6+HU1h8SS3qtkTQbW
        Oe4IGPyAqyNaSO5u7pHRrphtV5M4QBRhfpnk49fauHE8ijAYgegoE8gJO85PvQB2Flr18BILmdJZWUiK
        6RVOzI5HbjIB6UajrYOlvHcTtdTLhkkwAyP2YbcYwf8ADmuPM0hYEscjoaGmdgQWJB60Adjq3jC5tJrV
        oHDJlvMjP8Q479u9Nl1CGHWrW8gCQu29ZdnBkyM5I78/0rj2ldiCWJI6UpmkLAljkdDQB3EPia7GqXAd
        wbQqCmccHj/6/X2rir5ke9uGjCiMyMVCjgDPGKYbiQgguSD60ygAooooAKKKKACiiigAooooAKKKKACi
        iigAooooAK+1v2MPiJZJ4AvdDvJis1ndqUX1RzkfqGr4pra8MeMtY8G3Ms+j3r2ckoAfaAQ2OnBB6ZP5
        15uYYT69h5Ub2v8A1+RtSn7OakfoX8ZP2l9J8EWbRy3O2Ur+6tIDmaT/AOJHua+DPiR8Vdb+JWqyz39w
        6WXmFoLJW+SIdvqcdzXK6hqN1q15Ld3lxJdXMp3PLKxZmPuar1z5dlWHy6Fqa17mlfETrv3mFFFFe0co
        UUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQA
        UUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQA
        UUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQA
        UUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQA
        UUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQA
        UUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQB/9k=
</value>
  </data>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column6.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>